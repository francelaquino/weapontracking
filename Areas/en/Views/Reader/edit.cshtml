@model FMS.Models.mdlReaders
@{

    ViewBag.Title = "Reader";
    Layout = null;
}

<script type="text/javascript">


    $(document).ready(function () {

        $("#Form1_Modal").submit(function () {
            $.post(
                        $(this).attr('action'),
                        $(this).serialize(),
                        function () {
                            location.reload();
                        }
                );
            return false;
        })

    });



    function validate() {

        if ($("#txtmodel").val() == "") {
            alert("Please fill Reader Model.");
            $("#txtmodel").focus();
            return false;
        }
        if ($("#txtreader").val() == "") {
            alert("Please fill Reader Name.");
            $("#txtreader").focus();
            return false;
        }
        if ($("#txtport").val() == "") {
            alert("Please fill Port.");
            $("#txtport").focus();
            return false;
        }
        if ($("#txtip").val() == "") {
            alert("Please fill Ip Address.");
            $("#txtip").focus();
            return false;
        }
        if ($("#txtinterval").val() == "") {
            alert("Please fill Time Interval.");
            $("#txtinterval").focus();
            return false;
        }
        if ($("#txtlocation").val() == "") {
            alert("Please fill Location.");
            $("#txtlocation").focus();
            return false;
        }



        if (!confirm("Are you sure you want to submit this form?")) {

            return false;
        }
        $("#Form1_Modal").submit();

    }



    function isDelete() {
        if (confirm("Are you sure you want to delete this record?")) {

            $.ajax({
                url: '@Url.Action("isDelete")',
                type: 'POST',
                data: "{id:'" + $("#txtid").val() + "'}",
                contentType: 'application/json; charset=utf-8',
                success: function (data) {
                    if (data != "") {
                        alert("You cannot delete this data this. This data is referred to elsewhere transactions!");
                    } else {
                        location.reload();
                    }
                },
                error: function () {
                    alert("Connection Error");
                }
            });
        }
    }

</script>


@using (Html.BeginForm("updatereader", "reader", FormMethod.Post, new { @class = "form-horizontal", id = "Form1_Modal", enctype = "multipart/form-data" }))
{

    @Html.TextBox("txtid", @Model.ID, new { @class = "hidden" })
    @Html.TextBox("txtgid", @Model.GID, new { @class = "hidden" })

    <div class="form-body">
        <div class="form-group">
            <label class="col-md-3 control-label">Reader Model</label>
            <div class="col-md-7">
                @Html.DropDownList("txtmodel", (IEnumerable<SelectListItem>)ViewData["rfidmodel"], new { @class = "form-control require" })
            </div>
        </div>
        <div class="form-group">
            <label class="col-md-3 control-label">Reader Name</label>
            <div class="col-md-7">
                @Html.TextBox("txtreader", @Model.READERNAME, new { @class = "form-control require", maxlength = "100" })
            </div>
        </div>
        <div class="form-group">
            <label class="col-md-3 control-label">Port</label>
            <div class="col-md-7">
                @Html.TextBox("txtport", @Model.PORT, new { @class = "form-control require", maxlength = "100" })
            </div>
        </div>
        <div class="form-group">
            <label class="col-md-3 control-label">Ip Address</label>
            <div class="col-md-7">
                @Html.TextBox("txtip", @Model.IP, new { @class = "form-control require", maxlength = "100" })
            </div>
        </div>
        <div class="form-group">
            <label class="col-md-3 control-label">Time Interval</label>
            <div class="col-md-7">
                @Html.DropDownList("txtinterval", (IEnumerable<SelectListItem>)ViewData["interval"], new { @class = "form-control require" })
            </div>
        </div>
        <div class="form-group">
            <label class="col-md-3 control-label">Location</label>
            <div class="col-md-7">
                @Html.DropDownList("txtlocation", (IEnumerable<SelectListItem>)ViewData["location"], new { @class = "form-control require" })
            </div>
        </div>



    </div>
    <div class="form-actions">
        <div class="row">
            <div class="col-md-offset-3 col-md-9">
                <button type="button" onclick="validate()" class="btn btn-primary">Save</button>
                <button type="button" id="btndelete" class="btn btn-primary" onclick="isDelete();"> Delete </button>
                <button type="button" class="btn btn-primary btn-outline" data-dismiss="modal">Close</button>
            </div>
        </div>
    </div>
}
